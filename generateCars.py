import os, sys
from xml.dom import minidom
import argparse
import datetime
if 'SUMO_HOME' in os.environ:
    tools = os.path.join(os.environ['SUMO_HOME'], 'tools')
    sys.path.append(tools)
else:
    sys.exit("please declare environment variable 'SUMO_HOME'")

import sumolib
import json

parser = argparse.ArgumentParser()
parser.add_argument("--sumo", help="SUMO Simulator Network File Path (path and filename)")
parser.add_argument("--output", help="fcd Input File Generated by SUMO")
parser.add_argument("--csv", help="CSV Output Filename")
args = parser.parse_args()

if args.sumo and args.output and args.csv:
    net = sumolib.net.readNet(args.sumo)
    cars=[]
    f=open(args.csv, "a")
    mydoc = minidom.parse(args.output)
    items = mydoc.getElementsByTagName('timestep')
    for item in items:
        vectime = item.getAttribute('time')
        vehicles=item.getElementsByTagName('vehicle')
        for vehicle in vehicles:
            if int(vehicle.getAttribute('id')) not in cars:
                cars.append(int(vehicle.getAttribute('id')))
    cars.sort()
    x=0
    testdict={}
    for car in cars:
        testdict.update({car:x})
        x=x+1
    newcars=[]
    initialtime=float(0)
    eventtime=0
    cartoremove=[]
    for item in items:
        vectime = item.getAttribute('time')
        vehicles=item.getElementsByTagName('vehicle')
        for vehicle in vehicles:
            #caid=testdict[int(vehicle.getAttribute('id'))]
            #if caid==0 or caid==1 or caid==2 or caid==3 or caid==4 or caid==5 or caid==6 or caid==7 or caid==8 or caid==9:
            lon, lat = net.convertXY2LonLat(float(vehicle.getAttribute('x')), float(vehicle.getAttribute('y')))
            f.write(str(eventtime)+','+'carID00'+str(testdict[int(vehicle.getAttribute('id'))])+',('+str(lat)+'-'+str(lon)+'),car\n')
        eventtime+=1
    f.close()
    print("Number of Nodes: ",len(cars))
else:
    if not args.sumo:
        print("Please define the SUMO Simulator Network File Path")
    if not args.output:
        print("Please define fcd Input File Generated by SUMO")
    if not args.csv:
        print("Please define CSV Output Filename")